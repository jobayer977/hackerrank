{"Questions":[{"title":"what is hash map in javascript","content":"\nHashtables and hashmaps are data structures that store data in an array-like format, using key/value pairs, where the (hashed) key corresponds to the index in the array. One of the primary benefits that a hashtable has over a hashmap is the native ability to handle synchronous updates","section":"Questions"}],"hackerrank":[{"title":"10 Days of Javascript - Day 0 Data Types","content":"\n**Solution:**\n\n```js\nfunction performOperation(secondInteger, secondDecimal, secondString) {\n\tconst firstInteger = 4\n\tconst firstDecimal = 4.0\n\tconst firstString = 'HackerRank '\n\tconsole.log(firstInteger + Number(secondInteger))\n\tconsole.log(firstDecimal + Number(secondDecimal))\n\tconsole.log(firstString + secondString)\n}\nperformOperation(10, 5.0, 'is the best place to learn and practice coding!')\n```\n\n**Explanation**\n\nFirst we convert the secondInteger and secondDecimal to numbers using the Number function. Then we add them together and print the result to the console. In the next line we simply concatenate the firstString and secondString and print the result to the console.\n","problem":"https://www.hackerrank.com/challenges/js10-data-types/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 0 Hello, World!","content":"\n**Solution:**\n\n```js\nfunction greeting(parameterVariable) {\n\tconsole.log('Hello, World!')\n\tconsole.log(parameterVariable)\n}\n```\n\n**Explanation**\nThe first line of code prints 'Hello, World!' to the console. The second line of code prints the value of 'parameterVariable' to the console. The parameterVariable is a string of text.\n","problem":"https://www.hackerrank.com/challenges/js10-objects/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 1 Arithmetic Operators","content":"\n**Solution:**\n\n```js\nfunction getArea(length, width) {\n\treturn length * width\n}\n\nfunction getPerimeter(length, width) {\n\treturn 2 * (length + width)\n}\n\ngetArea(2, 3) // 6\n```\n\n**Explanation**\n\nWe can get the area of a rectangle by multiplying the length by the width. The getArea function takes two parameters, length and width, and returns the area of the rectangle. We can get the perimeter of a rectangle by adding the length and width together and multiplying by two. The getPerimeter function takes two parameters, length and width, and returns the perimeter of the rectangle.\n","problem":"https://www.hackerrank.com/challenges/js10-arithmetic-operators/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 1 Functions","content":"\n**Solution:**\n\n```js\nfunction factorial(n) {\n\tif (n === 1) {\n\t\treturn 1\n\t}\n\treturn n * factorial(n - 1)\n}\n\nfactorial(5) // 120\n```\n\n**Explanation**\n\nThe function is recursive. It calls itself until it reaches the base case. In this case, n === 1, which returns 1. n _ factorial(n - 1) is the recursive call. Since n - 1 === 0, it returns 1. n _ factorial(n - 1) === n \\* 1 === n.\n","problem":"https://www.hackerrank.com/challenges/js10-function/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 1 Let and Const","content":"\n**Solution:**\n\n```js\nconst PI = Math.PI\nconst r = readLine() // 2.6\nvar area = parseFloat(PI * r * r)\nconsole.log(area)\n\nvar peri = parseFloat(2 * PI * r)\nconsole.log(peri)\n```\n","problem":"https://www.hackerrank.com/challenges/js10-let-and-const/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 2 Conditional Statements If-Else","content":"\n**Solution:**\n\n```js\nfunction getGrade(score) {\n\tlet grade\n\tif (25 < score && score <= 30) {\n\t\tgrade = 'A'\n\t} else if (20 < score && score <= 25) {\n\t\tgrade = 'B'\n\t} else if (15 < score && score <= 20) {\n\t\tgrade = 'C'\n\t} else if (10 < score && score <= 15) {\n\t\tgrade = 'D'\n\t} else if (5 < score && score <= 10) {\n\t\tgrade = 'E'\n\t} else if (0 <= score && score <= 5) {\n\t\tgrade = 'F'\n\t} else {\n\t\tgrade = 'Invalid score'\n\t}\n\treturn grade\n}\n```\n","problem":"https://www.hackerrank.com/challenges/js10-if-else/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 2 Conditional Statements Switch","content":"\n**Solution:**\n\n```js\nfunction getLetter(s) {\n\tswitch (s.charAt(0)) {\n\t\tcase 'a':\n\t\tcase 'e':\n\t\tcase 'i':\n\t\tcase 'o':\n\t\tcase 'u':\n\t\t\treturn 'A'\n\t\tcase 'b':\n\t\tcase 'c':\n\t\tcase 'd':\n\t\tcase 'f':\n\t\tcase 'g':\n\t\t\treturn 'B'\n\t\tcase 'h':\n\t\tcase 'j':\n\t\tcase 'k':\n\t\tcase 'l':\n\t\tcase 'm':\n\t\t\treturn 'C'\n\t\tcase 'n':\n\t\tcase 'p':\n\t\tcase 'q':\n\t\tcase 'r':\n\t\tcase 's':\n\t\tcase 't':\n\t\tcase 'v':\n\t\tcase 'w':\n\t\tcase 'x':\n\t\tcase 'y':\n\t\tcase 'z':\n\t\t\treturn 'D'\n\t}\n}\n\nconsole.log(getLetter('a')) // A\n```\n\n**Explanation**\n\nThe first character of the string is a, so we return A. The rest of the string is empty, so we return A.\n","problem":"https://www.hackerrank.com/challenges/js10-if-else/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 2 Loops","content":"\n**Solution:**\n\n```js\nfunction vowelsAndConsonants(s) {\n\tconst vowelList = 'aeiouAEIOU'\n\tfor (let i = 0; i < s.length; i++) {\n\t\tif (vowelList.indexOf(s[i]) !== -1) {\n\t\t\tconsole.log(s[i])\n\t\t}\n\t}\n\tfor (let i = 0; i < s.length; i++) {\n\t\tif (vowelList.indexOf(s[i]) == -1) {\n\t\t\tconsole.log(s[i])\n\t\t}\n\t}\n}\n```\n","problem":"https://www.hackerrank.com/challenges/js10-loops/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 3 Arrays","content":"\n**Solution:**\n\n```js\nfunction getSecondLargest(nums) {\n\tlet sortedNums = nums.sort((a, b) => a - b)\n\tconst res = Array(...new Set([...sortedNums]))\n\treturn res[res.length - 2]\n}\n\nconsole.log(getSecondLargest([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n```\n\n**Explanation**\n\nThe largest number is 10, and the second largest number is 9. Therefore, return 9. First, we sort the array in ascending order, Since the array is sorted in ascending order, the second largest number is the last second element in the array.\n","problem":"https://www.hackerrank.com/challenges/js10-arrays/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 3 Throw","content":"\n**Solution:**\n\n```js\nfunction isPositive(a) {\n\tif (a > 0) {\n\t\treturn 'YES'\n\t} else if (a === 0) {\n\t\tthrow new Error('Zero Error')\n\t} else {\n\t\tthrow new Error('Negative Error')\n\t}\n}\n```\n\n**Explanation**\n\nThe if statement checks if 'a' is greater than 0. If it is, the function returns 'YES'. If 'a' is 0, the function throws an error with the message 'Zero Error'. If 'a' is less than 0, the function throws an error with the message 'Negative Error'. The else statement is not needed because the function will never reach the else statement if 'a' is 0 or greater than 0.\n","problem":"https://www.hackerrank.com/challenges/js10-throw/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 3 Try, Catch, and Finally","content":"\n**Solution:**\n\n```js\nfunction reverseString(s) {\n\ttry {\n\t\tconsole.log(s.split('').reverse().join(''))\n\t} catch (e) {\n\t\tconsole.log(e.message)\n\t\tconsole.log(s)\n\t}\n}\n```\n","problem":"https://www.hackerrank.com/challenges/js10-try-catch-and-finally/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 4 Classes","content":"\n**Solution:**\n\n```js\nclass Polygon {\n\tconstructor(sides) {\n\t\tthis.sides = sides\n\t}\n\n\tgetPerimeter() {\n\t\treturn this.sides.reduce((a, b) => a + b)\n\t}\n}\n```\n","problem":"https://www.hackerrank.com/challenges/js10-class/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 4 Count Objects","content":"\n**Solution:**\n\n```js\nfunction getCount(objects) {\n\tlet count = 0\n\tfor (const iterator of objects) {\n\t\tif (iterator.x === iterator.y) {\n\t\t\tcount++\n\t\t}\n\t}\n\treturn count\n}\n\nconst arr = [\n\t{\n\t\tx: 1,\n\t\ty: 1,\n\t},\n\t{\n\t\tx: 2,\n\t\ty: 3,\n\t},\n\t{\n\t\tx: 3,\n\t\ty: 3,\n\t},\n\t{\n\t\tx: 2,\n\t\ty: 4,\n\t},\n\t{\n\t\tx: 4,\n\t\ty: 5,\n\t},\n]\n\ngetCount(arr) // 2\n```\n\n**Solutions 2**\n\n```javascript\nfunction getCount(objects) {\n\treturn objects.filter(({ x, y }) => x === y).length\n}\n\nconst arr = [\n\t{\n\t\tx: 1,\n\t\ty: 1,\n\t},\n\t{\n\t\tx: 2,\n\t\ty: 3,\n\t},\n\t{\n\t\tx: 3,\n\t\ty: 3,\n\t},\n\t{\n\t\tx: 2,\n\t\ty: 4,\n\t},\n\t{\n\t\tx: 4,\n\t\ty: 5,\n\t},\n]\n\ngetCount(arr) // 2\n```\n\n**Explanation**\n","problem":"https://www.hackerrank.com/challenges/js10-count-objects/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 4 Create a Rectangle Object","content":"\n**Solution:**\n\n```js\nfunction Rectangle(a, b) {\n\treturn {\n\t\tlength: a,\n\t\twidth: b,\n\t\tperimeter: 2 * (a + b),\n\t\tarea: a * b,\n\t}\n}\n```\n","problem":"https://www.hackerrank.com/challenges/js10-objects/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 5 Arrow Functions","content":"\n**Solution:**\n\n```js\nfunction modifyArray(nums) {\n\tfor (const n in nums) {\n\t\tif (nums[n] % 2 === 0) {\n\t\t\tnums[n] = nums[n] * 2\n\t\t} else if (nums[n] % 2 === 1) {\n\t\t\tnums[n] = nums[n] * 3\n\t\t}\n\t}\n\treturn nums\n}\n\nconsole.log(modifyArray([1, 2, 3, 4, 5])) // Â [3, 4, 9, 8, 15]\n```\n","problem":"https://www.hackerrank.com/challenges/js10-arrows/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 5 Inheritance","content":"\n**Solution:**\n\n```js\nclass Rectangle {\n\tconstructor(w, h) {\n\t\tthis.w = w\n\t\tthis.h = h\n\t}\n}\n\nconst methods = {\n\tarea: function () {\n\t\treturn this.w * this.h\n\t},\n}\n\nObject.assign(Rectangle.prototype, methods)\n\nclass Square extends Rectangle {\n\tconstructor(w) {\n\t\tsuper(w, w)\n\t}\n}\n```\n","problem":"https://www.hackerrank.com/challenges/js10-inheritance/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 5 Template Literals","content":"\n**Solution:**\n\n```js\nfunction sides(literals, ...expressions) {\n\tconst [a, p] = expressions\n\tconst value = Math.sqrt(p ** 2 - 16 * a)\n\n\treturn [(p - value) / 4, (p + value) / 4]\n}\n```\n","problem":"https://www.hackerrank.com/challenges/js10-template-literals/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 6 JavaScript Dates","content":"\n**Solution:**\n\n```js\nfunction getDayName(dateString) {\n\tlet dayName\n\tlet date = new Date(dateString)\n\tswitch (date.getDay()) {\n\t\tcase 0:\n\t\t\tdayName = 'Sunday'\n\t\t\tbreak\n\t\tcase 1:\n\t\t\tdayName = 'Monday'\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tdayName = 'Tuesday'\n\t\t\tbreak\n\t\tcase 3:\n\t\t\tdayName = 'Wednesday'\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tdayName = 'Thursday'\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tdayName = 'Friday'\n\t\t\tbreak\n\t\tcase 6:\n\t\t\tdayName = 'Saturday'\n\t\t\tbreak\n\t}\n\n\treturn dayName\n}\n\nconsole.log(getDayName('10/11/2009')) // Sunday\n```\n","problem":"https://www.hackerrank.com/challenges/js10-date/problem?isFullScreen=true","section":"hackerrank"},{"title":"10 Days of Javascript - Day 7 Regular Expressions II","content":"\n**Solution:**\n\n```js\nfunction regexVar() {\n\treturn new RegExp(/^(Mr\\.|Mrs\\.|Ms\\.|Dr\\.|Er\\.)[a-zA-Z]+$/)\n}\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/js10-regexp-2/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 1 Data Types","content":"\n**Solution:**\n\n```js\nvar i2 = 0\nvar d2 = 0.0\nvar s2 = ''\n\ni2 = parseInt(readLine())\nd2 = parseFloat(readLine())\ns2 = readLine()\n\nconsole.log(i + i2)\n\nconsole.log((d + d2).toFixed(1))\n\nconsole.log(s + s2)\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/30-data-types/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 1 Hello World","content":"\n**Solution:**\n\n```js\nfunction processData(inputString) {\n\t// This line of code prints the first line of output\n\tconsole.log('Hello, World.')\n\n\t// Write the second line of output that prints the contents of 'inputString' here.\n\tconsole.log(inputString)\n}\n\nprocessData('Welcome to 30 Days of Code!')\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/30-hello-world/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 11 2D Arrays","content":"\n**Solution:**\n\n```js\n'use strict'\nprocess.stdin.resume()\nprocess.stdin.setEncoding('utf-8')\nlet inputString = ''\nlet currentLine = 0\nprocess.stdin.on('data', function (inputStdin) {\n\tinputString += inputStdin\n})\nprocess.stdin.on('end', function () {\n\tinputString = inputString.split('\\n')\n\tmain()\n})\nfunction readLine() {\n\treturn inputString[currentLine++]\n}\n\n// Ignore above this line\nfunction main() {\n\tlet arr = Array(6)\n\tfor (let i = 0; i < 6; i++) {\n\t\tarr[i] = readLine()\n\t\t\t.replace(/\\s+$/g, '')\n\t\t\t.split(' ')\n\t\t\t.map((arrTemp) => parseInt(arrTemp, 10))\n\t}\n\tconst sumArray = []\n\tfor (let i = 0; i < 4; i++) {\n\t\tfor (let j = 0; j < 4; j++) {\n\t\t\tconst topEl1 = arr[i][j]\n\t\t\tconst topEl2 = arr[i][j + 1]\n\t\t\tconst topEl3 = arr[i][j + 2]\n\n\t\t\tconst midEl1 = arr[i + 1][j + 1]\n\n\t\t\tconst botEl1 = arr[i + 2][j]\n\t\t\tconst botEl2 = arr[i + 2][j + 1]\n\t\t\tconst botEl3 = arr[i + 2][j + 2]\n\t\t\tconst sum = topEl1 + topEl2 + topEl3 + midEl1 + botEl1 + botEl2 + botEl3\n\t\t\tsumArray.push(sum)\n\t\t}\n\t}\n\tconsole.log(sumArray.sort((a, b) => b - a)[0])\n}\n```\n","problem":"https://www.hackerrank.com/challenges/30-2d-arrays/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 12 Inheritance","content":"\n**Solution:**\n\n```js\n'use strict'\n\nvar _input = ''\nvar _index = 0\nprocess.stdin.on('data', (data) => {\n\t_input += data\n})\nprocess.stdin.on('end', () => {\n\t_input = _input.split(new RegExp('[ \\n]+'))\n\tmain()\n})\nfunction read() {\n\treturn _input[_index++]\n}\n\n/**** Ignore above this line. ****/\n\n// start\nclass Person {\n\tconstructor(firstName, lastName, identification) {\n\t\tthis.firstName = firstName\n\t\tthis.lastName = lastName\n\t\tthis.idNumber = identification\n\t}\n\n\tprintPerson() {\n\t\tconsole.log(\n\t\t\t'Name: ' +\n\t\t\t\tthis.lastName +\n\t\t\t\t', ' +\n\t\t\t\tthis.firstName +\n\t\t\t\t'\\nID: ' +\n\t\t\t\tthis.idNumber\n\t\t)\n\t}\n}\n\nclass Student extends Person {\n\tconstructor(firstName, lastName, idNumber, scores) {\n\t\tsuper(firstName, lastName, idNumber, scores)\n\t\tthis.scores = scores\n\t}\n\n\tcalculate() {\n\t\tvar sum = this.scores.reduce((acc, num) => {\n\t\t\tacc += num\n\t\t\treturn acc\n\t\t})\n\t\tvar avg = sum / this.scores.length\n\n\t\tif (avg >= 90) {\n\t\t\treturn 'O'\n\t\t} else if (avg >= 80) {\n\t\t\treturn 'E'\n\t\t} else if (avg >= 70) {\n\t\t\treturn 'A'\n\t\t} else if (avg >= 55) {\n\t\t\treturn 'P'\n\t\t} else if (avg >= 40) {\n\t\t\treturn 'D'\n\t\t} else {\n\t\t\treturn 'T'\n\t\t}\n\t}\n}\n\n// end\n\nfunction main() {\n\tlet firstName = read()\n\tlet lastName = read()\n\tlet id = +read()\n\tlet numScores = +read()\n\tlet testScores = new Array(numScores)\n\n\tfor (var i = 0; i < numScores; i++) {\n\t\ttestScores[i] = +read()\n\t}\n\n\tlet s = new Student(firstName, lastName, id, testScores)\n\ts.printPerson()\n\ts.calculate()\n\tconsole.log('Grade: ' + s.calculate())\n}\n```\n","problem":"https://www.hackerrank.com/challenges/30-inheritance/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 13 Abstract Classes","content":"\n**Solution:**\n\n```js\n'use strict'\n\nvar _input = ''\nvar _index = 0\nprocess.stdin.on('data', (data) => {\n\t_input += data\n})\nprocess.stdin.on('end', () => {\n\t_input = _input.split(new RegExp('\\n'))\n\tmain()\n})\nfunction readLine() {\n\treturn _input[_index++]\n}\n\n/**** Ignore above this line. ****/\n\nclass Book {\n\tconstructor(title, author) {\n\t\tif (this.constructor === Book) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'Do not attempt to directly instantiate an abstract class.'\n\t\t\t)\n\t\t} else {\n\t\t\tthis.title = title\n\t\t\tthis.author = author\n\t\t}\n\t}\n\n\tdisplay() {\n\t\tconsole.log(\"Implement the 'display' method!\")\n\t}\n}\n\n// Start\nclass MyBook extends Book {\n\tconstructor(title, author, price) {\n\t\tsuper(title, author)\n\t\tthis.price = price\n\t}\n\n\tdisplay() {\n\t\tconsole.log(`Title: ${this.title}`)\n\t\tconsole.log(`Author: ${this.author}`)\n\t\tconsole.log(`Price: ${this.price}`)\n\t}\n}\n// End\n\nfunction main() {\n\tlet title = readLine()\n\tlet author = readLine()\n\tlet price = +readLine()\n\n\tlet book = new MyBook(title, author, price)\n\tbook.display()\n}\n```\n","problem":"https://www.hackerrank.com/challenges/30-abstract-classes/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 15 Linked List","content":"\n**Solution:**\n\n```js\nprocess.stdin.resume()\nprocess.stdin.setEncoding('ascii')\n\nvar input_stdin = ''\nvar input_stdin_array = ''\nvar input_currentline = 0\n\nprocess.stdin.on('data', function (data) {\n\tinput_stdin += data\n})\n\nprocess.stdin.on('end', function () {\n\tinput_stdin_array = input_stdin.split('\\n')\n\tmain()\n})\nfunction readLine() {\n\treturn input_stdin_array[input_currentline++]\n}\nfunction Node(data) {\n\tthis.data = data\n\tthis.next = null\n}\nfunction Solution() {\n\tthis.insert = function (head, data) {\n\t\t//complete this method\n\t\tvar newNode = new Node(data)\n\n\t\tif (head === null || typeof head === 'undefined') {\n\t\t\thead = newNode\n\t\t} else if (head.next === null) {\n\t\t\thead.next = newNode\n\t\t} else {\n\t\t\tvar next = head.next\n\t\t\twhile (next.next) {\n\t\t\t\tnext = next.next\n\t\t\t}\n\t\t\tnext.next = newNode\n\t\t}\n\n\t\treturn head\n\t}\n\tthis.display = function (head) {\n\t\tvar start = head\n\t\twhile (start) {\n\t\t\tprocess.stdout.write(start.data + ' ')\n\t\t\tstart = start.next\n\t\t}\n\t}\n}\nfunction main() {\n\tvar T = parseInt(readLine())\n\tvar head = null\n\tvar mylist = new Solution()\n\tfor (i = 0; i < T; i++) {\n\t\tvar data = parseInt(readLine())\n\t\thead = mylist.insert(head, data)\n\t}\n\tmylist.display(head)\n}\n```\n","problem":"https://www.hackerrank.com/challenges/30-linked-list/problem?isFullScreen=true&h_r=next-challenge&h_v=zen","section":"hackerrank"},{"title":"30 Days of Code - Day 16 Exceptions - String to Integer","content":"\n**Solution:**\n\n```js\n'use strict'\n\nprocess.stdin.resume()\nprocess.stdin.setEncoding('utf-8')\n\nlet inputString = ''\nlet currentLine = 0\n\nprocess.stdin.on('data', function (inputStdin) {\n\tinputString += inputStdin\n})\n\nprocess.stdin.on('end', function () {\n\tinputString = inputString.split('\\n')\n\n\tmain()\n})\n\nfunction readLine() {\n\treturn inputString[currentLine++]\n}\n\n// Ignore above this line\n\nfunction main() {\n\ttry {\n\t\tconst S = readLine()\n\t\t!isNaN(parseInt(S)) ? console.log(parseInt(S)) : x\n\t} catch (e) {\n\t\tconsole.log('Bad String')\n\t}\n}\n```\n","problem":"https://www.hackerrank.com/challenges/30-exceptions-string-to-integer/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 17 More Exceptions","content":"\n**Solution:**\n\n```js\nprocess.stdin.resume()\nprocess.stdin.setEncoding('ascii')\n\nvar input_stdin = ''\nvar input_stdin_array = ''\nvar input_currentline = 0\n\nprocess.stdin.on('data', function (data) {\n\tinput_stdin += data\n})\n\nprocess.stdin.on('end', function () {\n\tinput_stdin_array = input_stdin.split('\\n')\n\tmain()\n})\nfunction readLine() {\n\treturn input_stdin_array[input_currentline++]\n}\n\n//Write your code here\nclass Calculator {\n\tpower(n, p) {\n\t\tif (n < 0 || p < 0) {\n\t\t\tthrow 'n and p should be non-negative'\n\t\t} else {\n\t\t\treturn Math.pow(n, p)\n\t\t}\n\t}\n}\n\nfunction main() {\n\tvar myCalculator = new Calculator()\n\tvar T = parseInt(readLine())\n\twhile (T-- > 0) {\n\t\tvar num = readLine().split(' ')\n\t\ttry {\n\t\t\tvar n = parseInt(num[0])\n\t\t\tvar p = parseInt(num[1])\n\t\t\tvar ans = myCalculator.power(n, p)\n\t\t\tconsole.log(ans)\n\t\t} catch (e) {\n\t\t\tconsole.log(e)\n\t\t}\n\t}\n}\n```\n","problem":"https://www.hackerrank.com/challenges/30-more-exceptions/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 18 Queues and Stacks","content":"\n**Solution:**\n\n```js\nfunction Solution() {\n\tthis.stack = []\n\tthis.queue = []\n}\n\nSolution.prototype.pushCharacter = function pushCharacter(char) {\n\tthis.stack.push(char)\n}\n\nSolution.prototype.enqueueCharacter = function enqueueCharacter(char) {\n\tthis.queue.push(char)\n}\n\nSolution.prototype.popCharacter = function popCharacter() {\n\treturn this.stack.pop()\n}\n\nSolution.prototype.dequeueCharacter = function dequeueCharacter() {\n\treturn this.queue.shift()\n}\n```\n","problem":"https://www.hackerrank.com/challenges/30-queues-stacks/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 2 Operators","content":"\n**Solution:**\n\n```js\nfunction solve(meal_cost, tip_percent, tax_percent) {\n\tconst tip = (tip_percent / 100) * meal_cost\n\tconst tax = (tax_percent / 100) * meal_cost\n\tconsole.log(Math.round(tip + tax + meal_cost))\n}\n\nsolve(12.0, 20, 8)\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/30-operators/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 3 Intro to Conditional Statements","content":"\n**Solution:**\n\n```js\nfunction main() {\n\tconst N = parseInt(readLine().trim(), 10)\n\tconst isEven = N % 2 === 0\n\tif (!isEven) {\n\t\tconsole.log('Weird')\n\t} else if (isEven && N <= 5 && N >= 2) {\n\t\tconsole.log('Not Weird')\n\t} else if (isEven && N <= 20 && N >= 6) {\n\t\tconsole.log('Weird')\n\t} else if (isEven && N > 20) {\n\t\tconsole.log('Not Weird')\n\t}\n}\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/30-conditional-statements/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 4 Class vs. Instance","content":"\n**Solution:**\n\n```js\nfunction Person(initialAge) {\n\tif (initialAge > 0) {\n\t\tthis.age = initialAge\n\t} else {\n\t\tthis.age = 0\n\t\tconsole.log('Age is not valid, setting age to 0.')\n\t}\n\tthis.amIOld = function () {\n\t\tif (this.age < 13) {\n\t\t\tconsole.log('You are young.')\n\t\t} else if (this.age < 18) {\n\t\t\tconsole.log('You are a teenager.')\n\t\t} else {\n\t\t\tconsole.log('You are old.')\n\t\t}\n\t}\n\tthis.yearPasses = function () {\n\t\tthis.age++\n\t}\n}\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/30-class-vs-instance/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 5 Loops","content":"\n**Solution:**\n\n```js\nfunction main() {\n\tconst n = parseInt(readLine().trim(), 10)\n\tvar i = 0\n\twhile (i < 10) {\n\t\ti++\n\t\tconsole.log(`${n} x ${i} = ${n * i}`)\n\t}\n}\n```\n","problem":"https://www.hackerrank.com/challenges/30-loops/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 6 Let's Review","content":"\n**Solution:**\n\n**Input**\n\n```js\nprocessData('2\\nHacker\\nRank')\n```\n\n**Solution's**\n\n```js\nfunction processData(input) {\n\tconst inputArray = input.split('\\n')\n\tconst inputStrings = inputArray.slice(1, inputArray.length)\n\tfor (let i = 0; i < inputArray[0]; i++) {\n\t\tconst str = inputStrings[i]\n\t\tconst odd = []\n\t\tconst even = []\n\t\tfor (let key in str) {\n\t\t\tif (key % 2 == 0) {\n\t\t\t\teven.push(str[key])\n\t\t\t} else {\n\t\t\t\todd.push(str[key])\n\t\t\t}\n\t\t}\n\t\tconsole.log(`${even.join('')} ${odd.join('')}`)\n\t}\n}\n```\n","problem":"https://www.hackerrank.com/challenges/30-review-loop/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 7 Arrays","content":"\n**Solution:**\n\n```js\nconsole.log(arr.reverse().join(' '))\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/30-arrays/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 8 Dictionaries and Maps","content":"\n## [Day 8 Dictionaries and Maps](https://www.hackerrank.com/challenges/30-dictionaries-and-maps/problem?isFullScreen=true)\n\n**Solution:**\n\n```js\nfunction processData(input) {\n\tconst phoneBook = new Map()\n\tconst inputArray = input.split('\\n')\n\tconst numberOfPhone = inputArray.shift()\n\tinputArray.forEach((x, i, key) => {\n\t\tif (i < Number(numberOfPhone)) {\n\t\t\tconst normalizedX = x.trim()?.split(' ')\n\t\t\tphoneBook.set(normalizedX[0], normalizedX[1])\n\t\t} else {\n\t\t\tif (phoneBook.has(x)) {\n\t\t\t\tconsole.log(`${x}=${phoneBook.get(x)}`)\n\t\t\t} else {\n\t\t\t\tconsole.log(`Not found`)\n\t\t\t}\n\t\t}\n\t})\n}\n```\n\n**Input Format**\n\n```js\nprocessData('3\\nsam 99912222\\ntom 11122222\\nharry 12299933\\nsam\\nedward\\nharry')\n```\n","problem":"https://www.hackerrank.com/challenges/30-dictionaries-and-maps/problem?isFullScreen=true","section":"hackerrank"},{"title":"30 Days of Code - Day 9 Recursion 3","content":"\n**Solution:**\n\n```js\nfunction factorial(n) {\n\tif (n == 1) {\n\t\treturn n\n\t}\n\n\treturn n * factorial(n - 1)\n}\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/30-recursion/problem?isFullScreen=true","section":"hackerrank"},{"title":"The HackerRank Interview Preparation Kit - 01 Warm up Challenges Counting Valleys","content":"\n**Solution:**\n\n```js\nfunction countingValleys(steps, path) {\n\tlet valleys = 0\n\tlet level = 0\n\tfor (const key in path) {\n\t\tconst item = path[key]\n\t\tif (item === 'D') {\n\t\t\tlevel--\n\t\t\tif (level === -1) valleys++\n\t\t} else {\n\t\t\tlevel++\n\t\t}\n\t}\n\treturn valleys\n}\ncountingValleys(8, 'UDDDUDUU')\n```\n","problem":"https://www.hackerrank.com/challenges/counting-valleys/problem?isFullScreen=true&h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup","section":"hackerrank"},{"title":"The HackerRank Interview Preparation Kit - 02 Warm up Challenges Sales by Match","content":"\n**Solution:**\n\n```js\nfunction sockMerchant(n, ar) {\n\tconst obj = {}\n\tlet paris = 0\n\tfor (let x in ar) {\n\t\tconst item = ar[x]\n\t\tobj[item] = [...(obj[item] || []), item]\n\t}\n\tObject.values(obj).forEach((x) => {\n\t\tif (x.length % 2 == 0 && x.length > 1) {\n\t\t\tparis += x.length / 2\n\t\t} else if (x.length > 1) {\n\t\t\tparis += (x.length - 1) / 2\n\t\t}\n\t})\n\n\treturn paris\n}\n\nsockMerchant(9, [10, 20, 20, 10, 10, 30, 50, 10, 20])\n```\n\n### **Example 2:**\n\n```js\nfunction sockMerchant(n, ar) {\n\tlet paris = 0\n\tconst hash = {}\n\tfor (const key in ar) {\n\t\tconst item = ar[key]\n\t\tif (hash[item]) {\n\t\t\tparis++\n\t\t\tdelete hash[item]\n\t\t} else {\n\t\t\thash[item] = true\n\t\t}\n\t}\n\n\treturn paris\n}\nsockMerchant(6, [10, 20, 20, 10, 30, 1])\n```\n\n**Explanation**\n\nn = 6 (number of socks) and ar = [10, 20, 20, 10, 30, 10] (socks colors) . The function must return 2 . Because there are 2 pairs of matching socks: one of each color. So first we create a hash table with the colors as keys and the values as true. Then we loop through the array and check if the color is in the hash table. If it is, we increment the number of pairs and delete the color from the hash table. If it's not, we add the color to the hash table.\n","problem":"https://www.hackerrank.com/challenges/sock-merchant/problem?isFullScreen=true&h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup","section":"hackerrank"},{"title":"The HackerRank Interview Preparation Kit - 03 Jumping on the Clouds","content":"\n**Solution:**\n\n```js\nfunction jumpingOnClouds(c) {\n\tlet jumps = 0\n\tlet i = 0\n\twhile (i < c.length - 1) {\n\t\tif (i + 2 < c.length && c[i + 2] == 0) {\n\t\t\ti += 2\n\t\t} else {\n\t\t\ti++\n\t\t}\n\t\tjumps++\n\t}\n\treturn jumps\n}\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/jumping-on-the-clouds/problem?isFullScreen=true&h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup","section":"hackerrank"},{"title":"The HackerRank Interview Preparation Kit - 04 Repeated String","content":"\n**Solution:**\n\n```js\nfunction repeatedString(s, n) {\n\tlet occurances = s.split('a').length - 1\n\tlet max = Math.floor(n / s.length)\n\tlet totalAs = occurances * max\n\ttotalAs += s.slice(0, n % s.length).split('a').length - 1\n\treturn totalAs\n}\n```\n\n<!-- **Explanation** -->\n","problem":"https://www.hackerrank.com/challenges/repeated-string/problem?isFullScreen=true&h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup","section":"hackerrank"}],"leetcode":[{"title":"1025. Divisor Game","content":"\n**Solution:**\n\n```js\nvar divisorGame = function (n) {\n\treturn n % 2 === 0\n}\n```\n","problem":"https://leetcode.com/problems/divisor-game/","section":"leetcode"},{"title":"Strings - 1108. Defanging an IP Address","content":"\n**Solution:**\n\n```js\nvar defangIPaddr = function (address) {\n\treturn address.replace(/\\./g, '[.]')\n}\n```\n","problem":"https://leetcode.com/problems/defanging-an-ip-address/","section":"leetcode"},{"title":"1221 Split a String in Balanced Strings","content":"\n**Solution:**\n\n```js\nvar balancedStringSplit = function (s) {\n\tlet count = 0\n\tlet result = 0\n\tfor (let i = 0; i < s.length; i++) {\n\t\tif (s[i] === 'L') {\n\t\t\tcount++\n\t\t} else {\n\t\t\tcount--\n\t\t}\n\t\tif (count === 0) {\n\t\t\tresult++\n\t\t}\n\n\t\tconsole.log({ count })\n\t}\n\treturn result\n}\n```\n","problem":"https://leetcode.com/problems/split-a-string-in-balanced-strings/","section":"leetcode"},{"title":"Array - 1365. How Many Numbers Are Smaller Than the Current Number","content":"\n**Solution:**\n\n```js\nvar smallerNumbersThanCurrent = function (nums) {\n\tconst sorted = [...nums].sort((a, b) => a - b)\n\treturn nums.map((n) => sorted.indexOf(n))\n}\n```\n\n**Explanation:**\n\n1. Sort the array in ascending order [9, 8, 7, 6, 5, 4, 3, 2, 1] to [1, 2, 3, 4, 5, 6, 7, 8, 9];\n2. And then use `indexOf` to find the index of each element in the sorted array\n","problem":"https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/","section":"leetcode"},{"title":"Array - 1431. Kids With the Greatest Number of Candies","content":"\n**Solution:**\n\n```js\nvar kidsWithCandies = function (candies, extraCandies) {\n\tlet max = Math.max(...candies)\n\treturn candies.map((candy) => candy + extraCandies >= max)\n}\n```\n\n**Explanation:**\n\n- Find the maximum number of candies\n- Then, for each kid, check if the kid has the maximum number of candies or not\n","problem":"https://leetcode.com/problems/kids-with-the-greatest-number-of-candies/","section":"leetcode"},{"title":"Array - 1470. Shuffle the Array","content":"\n**Solution:**\n\n```js\nvar shuffle = function (nums, n) {\n\tconst arr1 = nums.slice(0, n)\n\tconst arr2 = nums.slice(n, nums.length)\n\treturn arr1\n\t\t.map((x, i) => {\n\t\t\treturn [x, arr2[i]]\n\t\t})\n\t\t.flat(1)\n}\n```\n","problem":"https://leetcode.com/problems/shuffle-the-array/","section":"leetcode"},{"title":"Array - 1480 Running Sum of 1d Array","content":"\n**Solution:**\n\n```js\n/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar runningSum = function (nums) {\n\tconst arr = []\n\tfor (let i = 0; i < nums.length; i++) {\n\t\tarr.push(nums.slice(0, i + 1).reduce((acc, curr) => acc + curr, 0))\n\t}\n\treturn arr\n}\n```\n","problem":"https://leetcode.com/problems/running-sum-of-1d-array/","section":"leetcode"},{"title":"Array - 1512. Number of Good Pairs","content":"\n**Solution:**\n\n```js\nvar numIdenticalPairs = function (nums) {\n\tlet counter = 0\n\tfor (let i = 0; i < nums.length; i++) {\n\t\tconst iElement = nums[i]\n\t\tfor (let j = i + 1; j < nums.length; j++) {\n\t\t\tconst jElement = nums[j]\n\t\t\tif (iElement === jElement) {\n\t\t\t\tcounter++\n\t\t\t}\n\t\t}\n\t}\n\treturn counter\n}\n```\n","problem":"https://leetcode.com/problems/number-of-good-pairs","section":"leetcode"},{"title":"1656. Design an Ordered Stream","content":"\n**Solution:**\n\n```js\nvar OrderedStream = function (n) {\n\tthis.size = 0\n\tthis.table = new Array(n)\n}\n\nOrderedStream.prototype.insert = function (idKey, value) {\n\tthis.table[idKey - 1] = value\n\n\tlet result = []\n\twhile (this.table[this.size] !== undefined) {\n\t\tresult.push(this.table[this.size])\n\t\tthis.size++\n\t}\n\treturn result\n}\n```\n","problem":"https://leetcode.com/problems/design-an-ordered-stream","section":"leetcode"},{"title":"Array - 1672. Richest Customer Wealth","content":"\n**Solution:**\n\n```js\nvar maximumWealth = function (accounts) {\n\tconst r = accounts.map((usr) => usr.reduce((acc, curr) => acc + curr, 0))\n\treturn Math.max(...r)\n}\n```\n","problem":"https://leetcode.com/problems/richest-customer-wealth/","section":"leetcode"},{"title":"Strings - 1678. Goal Parser Interpretation","content":"\n**Solution:**\n\n```js\nvar interpret = function (command) {\n\tcommand.split('').map((x) => {\n\t\tcommand = command.replace('()', 'o')\n\t\tcommand = command.replace('(al)', 'al')\n\t})\n\treturn command\n}\n```\n","problem":"https://leetcode.com/problems/goal-parser-interpretation","section":"leetcode"},{"title":"1859 Sorting the Sentence","content":"\n**Solution:**\n\n```js\nvar sortSentence = function (s) {\n\treturn s\n\t\t.split(' ')\n\t\t.sort((a, b) => a[a.length - 1] - b[b.length - 1])\n\t\t.map((w) => w.slice(0, -1))\n\t\t.join(' ')\n}\n```\n","problem":"https://leetcode.com/problems/sorting-the-sentence/description/","section":"leetcode"},{"title":"Array - 1920 Build Array from Permutation","content":"\n**Solution:**\n\n```js\nvar buildArray = function (nums) {\n\tlet newArray = []\n\tfor (let i = 0; i < nums.length; i++) {\n\t\tconst index = nums[i]\n\t\tnewArray.push(nums[index])\n\t}\n\treturn newArray\n}\n```\n","problem":"https://leetcode.com/problems/build-array-from-permutation/","section":"leetcode"},{"title":"Array - 1929 Concatenation of Array","content":"\n**Solution:**\n\n```js\n/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar getConcatenation = function (nums) {\n\treturn nums.concat(nums)\n}\n```\n","problem":"https://leetcode.com/problems/concatenation-of-array/","section":"leetcode"},{"title":"Array - 2011. Final Value of Variable After Performing Operations","content":"\n**Solution:**\n\n```js\nvar finalValueAfterOperations = function (operations) {\n\tlet x = 0\n\tfor (let i = 0; i < operations.length; i++) {\n\t\tconst element = operations[i]\n\t\tif (element.includes('--')) {\n\t\t\tx--\n\t\t} else if (element.includes('++')) {\n\t\t\tx++\n\t\t}\n\t}\n\treturn x\n}\n```\n","problem":"https://leetcode.com/problems/final-value-of-variable-after-performing-operations/","section":"leetcode"},{"title":"Array - 2114. Maximum Number of Words Found in Sentences","content":"\n**Solution:**\n\n```js\nvar mostWordsFound = function (sentences) {\n\treturn Math.max(\n\t\t...sentences.map((x) => {\n\t\t\treturn x.split(' ').length\n\t\t})\n\t)\n}\n```\n","problem":"https://leetcode.com/problems/maximum-number-of-words-found-in-sentences/","section":"leetcode"},{"title":"2160. Minimum Sum of Four Digit Number After Splitting Digits","content":"\n**Solution:**\n```js\nvar minimumSum = function (num) {\n\tlet array = String(num).split('')\n\tlet sortedarray = array.sort()\n\treturn (\n\t\tNumber(sortedarray[0] + sortedarray[3]) +\n\t\tNumber(sortedarray[1] + sortedarray[2])\n\t)\n}\n```","problem":"https://leetcode.com/problems/minimum-sum-of-four-digit-number-after-splitting-digits/description/","section":"leetcode"},{"title":"2325. Decode the Message","content":"\n**Solution:**\n\n```js\nvar decodeMessage = function (key, message) {\n\tconst alphabt = 'abcdefghijklmnopqrstuvwxyz'\n\tconst map = new Map()\n\tkey = [...new Set(key.split(''))].join('')\n\tkey = key.replace(/ /g, '')\n\n\tfor (let i = 0; i < alphabt.length; i++) {\n\t\tmap.set(key[i], alphabt[i])\n\t}\n\n\tlet result = ''\n\tfor (let i = 0; i < message.length; i++) {\n\t\tconst key = message[i]\n\t\tconst value = map.get(key)\n\t\tif (!value) {\n\t\t\tresult += ' '\n\t\t} else {\n\t\t\tresult += value\n\t\t}\n\t}\n\treturn result\n}\n```\n","problem":"https://leetcode.com/problems/decode-the-message","section":"leetcode"},{"title":"2418 Sort the People","content":"\n**Solution:**\n\n```js\nvar sortPeople = function (names, heights) {\n\tconst normalize = names.map((x, i) => ({ name: x, height: heights[i] }))\n\treturn normalize.sort((a, b) => b.height - a.height).map((x) => x.name)\n}\n```\n","problem":"https://leetcode.com/problems/sort-the-people/","section":"leetcode"},{"title":"509. Fibonacci Number","content":"\n**Solution:**\n\n```js\nvar fib = function (n) {\n\tif (n < 2) return n\n\treturn fib(n - 1) + fib(n - 2)\n}\n```\n","problem":"https://leetcode.com/problems/fibonacci-number","section":"leetcode"},{"title":"Strings - 771. Jewels and Stones","content":"\n**Solution:**\n\n```js\nvar numJewelsInStones = function (jewels, stones) {\n\tlet count = 0\n\tstones.split('').map((x) => jewels.includes(x) && count++)\n\treturn count\n}\n```\n","problem":"https://leetcode.com/problems/jewels-and-stones/","section":"leetcode"}]}